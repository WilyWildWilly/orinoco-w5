$colors: (
  "hdr_ftr_color": midnightblue,
  "bck_color": darkorange,
	"color_1": mintcream,
	"color_2": darkslategray,
	"color_2_a": rgba(47, 79, 79, 0.5),
	"color_3": lightgray
);

header, footer, .nav_foot {
  background-color: map-get($colors, "hdr_ftr_color");
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  a, nav, img {
    padding-left: 1em;
    padding-right: 1em;
  }
}
.nav_foot, .navtop {
  width: 100%;
  a {
    padding: 1em;
  }
}
body{
  font-family: 'Lato', sans-serif;
  margin: 0px;
  background-color: map-get($colors, "color_1");
}
.bloc1 {
  h1 {
    padding-left: 3%;
    padding-right: 3%;
    font-size: 28px;
    font-style: 700;
  }
  h2, p {
    padding-left: 3%;
    padding-right: 3%;
    font-weight: 300;
  }
}
// top nav (cart etc.)
nav {
  display: flex; 
  a {
    color: map-get($colors, "bck_color");
    text-decoration: none;
    margin: 0px;
    padding: 0px;
    color: color_1;
  }
}
.main_bl {
  display:flex;
  background-color: map-get($colors, "color_1");
  @media (max-width: 600px ) {
    flex-direction: column-reverse;
  }
  @media (min-width: 601px ) and (max-width: 1025px ) {
    flex-direction: column;
  }
  flex-direction: row-reverse;
}

// the side-on-full/top-on-tab/bottom-on-mob navbar
.low_nav {
  background-color: map-get($colors, "color_3");
  display: flex; 
  @media (max-width: 600px ) {
    flex-direction: column-reverse;
  }
  @media (min-width: 601px ) and (max-width: 1025px ) {
    flex-direction: row;
  }
  flex-direction: column;
  .btn_container {
    display: flex;
    flex-direction: column;

  }
  button {
    width: 100%;
    max-height: 2em;
    padding-left: 3em;
    padding-right: 3em;
    flex: 1;
    border: none;
    border-radius: 0px;
    background-color: map-get($colors, "color_3");
    color: map-get($colors, "color_2");
    &:hover{
      background-color: map-get($colors, "bck_color");
      color:map-get($colors, "color_1");
    }
  }
}

.bloc2 {
  display: grid;
  grid-gap: 2em; /* [1] Add some gap between rows and columns */
  grid-template-columns: repeat( auto-fill, minmax( 28%, 1fr ) ); /* [2] Make columns adjust according to the available viewport */
  grid-auto-rows: 33%; /* [3] Set the height for implicitly-created row track */
  article {
    img {
      width: 100%;
    }
  }
  margin: 2em;
  button {
    border: none;
    border-radius: 5px;
    background-color: map-get($colors, "color_2");
    color: map-get($colors, "color_1");
  }
  th, td {
    padding: 3px;
    button {
      width: 33%;
      border-radius: 100%;
    }
  }
}
// single teddies in index list
.card__pics {
  border-radius: 8px;
}
.card__content {
  position: relative;
  text-align: center;
  :hover{
    .bear__name{
      transform: scaleY(1);
    }
  }
  .bear__name {
    color: map-get($colors, "color_1");
    background-color: map-get($colors, "color_2_a");
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    position: absolute;
    bottom: 0px;
    width: 100%;
    transform: scaleY(0);
    transition: 200ms ease-in-out;
  }
}

footer {
  padding: 2em;
}
// buttons of the header and footer elements
.blue__btn {
  padding-left: 2em;
  padding-right: 2em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  background-color: map-get($colors, "hdr_ftr_color");
  border: none;
  border-radius: 0.3em;
  transition: background-color 200ms ease-in-out;
  :hover{
    background-color: darken(map-get($colors, "hdr_ftr_color"), 2);
    transition: background-color 200ms ease-in-out;
  }
}
button {
  font-family: 'Lato', sans-serif;
  a {
    font-family: 'Lato', sans-serif;
  }
}
#order__btn{
  width: 100%;
  a{
    color: map-get($colors, "color_1");
    text-decoration: none;
  }
}

